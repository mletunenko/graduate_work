"""oauth tables deleted

Revision ID: de467eab0e9f
Revises: 48aafc378157
Create Date: 2025-04-17 14:34:38.997101

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'de467eab0e9f'
down_revision: Union[str, None] = '48aafc378157'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('oauth_accounts')
    op.drop_table('oauth_providers')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('oauth_providers',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='pk_oauth_providers'),
    sa.UniqueConstraint('name', name='uq_oauth_providers_name'),
    postgresql_ignore_search_path=False
    )
    op.create_table('oauth_accounts',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=False),
    sa.Column('profile_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('provider_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('provider_user_id', sa.VARCHAR(), autoincrement=False, nullable=True, comment='user id предоставляемый провайдером oauth'),
    sa.Column('access_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('refresh_token', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('expires_at', sa.INTEGER(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['profile_id'], ['profiles.id'], name='fk_oauth_accounts_profile_id_profiles', ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['provider_id'], ['oauth_providers.id'], name='fk_oauth_accounts_provider_id_oauth_providers', ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name='pk_oauth_accounts')
    )
    # ### end Alembic commands ###
